//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomers", ReplyAction="http://tempuri.org/IService/GetCustomersResponse")]
        System.Collections.Generic.List<SOAMultiLayerSolution.DTO.CustomerDTO> GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomers", ReplyAction="http://tempuri.org/IService/GetCustomersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SOAMultiLayerSolution.DTO.CustomerDTO>> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomer", ReplyAction="http://tempuri.org/IService/GetCustomerResponse")]
        SOAMultiLayerSolution.DTO.CustomerDTO GetCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCustomer", ReplyAction="http://tempuri.org/IService/GetCustomerResponse")]
        System.Threading.Tasks.Task<SOAMultiLayerSolution.DTO.CustomerDTO> GetCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCustomer", ReplyAction="http://tempuri.org/IService/CreateCustomerResponse")]
        int CreateCustomer(SOAMultiLayerSolution.DTO.CustomerDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateCustomer", ReplyAction="http://tempuri.org/IService/CreateCustomerResponse")]
        System.Threading.Tasks.Task<int> CreateCustomerAsync(SOAMultiLayerSolution.DTO.CustomerDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCustomer", ReplyAction="http://tempuri.org/IService/DeleteCustomerResponse")]
        bool DeleteCustomer(SOAMultiLayerSolution.DTO.CustomerDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCustomer", ReplyAction="http://tempuri.org/IService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<bool> DeleteCustomerAsync(SOAMultiLayerSolution.DTO.CustomerDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCustomer", ReplyAction="http://tempuri.org/IService/UpdateCustomerResponse")]
        bool UpdateCustomer(SOAMultiLayerSolution.DTO.CustomerDTO dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCustomer", ReplyAction="http://tempuri.org/IService/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<bool> UpdateCustomerAsync(SOAMultiLayerSolution.DTO.CustomerDTO dto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MvcClient.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MvcClient.ServiceReference.IService>, MvcClient.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<SOAMultiLayerSolution.DTO.CustomerDTO> GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SOAMultiLayerSolution.DTO.CustomerDTO>> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public SOAMultiLayerSolution.DTO.CustomerDTO GetCustomer(int id) {
            return base.Channel.GetCustomer(id);
        }
        
        public System.Threading.Tasks.Task<SOAMultiLayerSolution.DTO.CustomerDTO> GetCustomerAsync(int id) {
            return base.Channel.GetCustomerAsync(id);
        }
        
        public int CreateCustomer(SOAMultiLayerSolution.DTO.CustomerDTO dto) {
            return base.Channel.CreateCustomer(dto);
        }
        
        public System.Threading.Tasks.Task<int> CreateCustomerAsync(SOAMultiLayerSolution.DTO.CustomerDTO dto) {
            return base.Channel.CreateCustomerAsync(dto);
        }
        
        public bool DeleteCustomer(SOAMultiLayerSolution.DTO.CustomerDTO dto) {
            return base.Channel.DeleteCustomer(dto);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCustomerAsync(SOAMultiLayerSolution.DTO.CustomerDTO dto) {
            return base.Channel.DeleteCustomerAsync(dto);
        }
        
        public bool UpdateCustomer(SOAMultiLayerSolution.DTO.CustomerDTO dto) {
            return base.Channel.UpdateCustomer(dto);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCustomerAsync(SOAMultiLayerSolution.DTO.CustomerDTO dto) {
            return base.Channel.UpdateCustomerAsync(dto);
        }
    }
}
